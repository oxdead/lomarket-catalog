{{ header }}
<div id="checkout-checkout" class="container">
    <ul class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
    </ul>
    
    <div id="content" class="{{ class }}">
        <h1>{{ heading_title }}</h1>

        <div class="panel-group">
            
            <h4>{{ text_checkout_payment_address }}</h4>
            <div id="guest-payment-address-body">
            </div>
            <hr>

            {% if shipping_required %}
            <h4>{{ text_checkout_shipping_address }}</h4>
            <div id="guest-shipping-address-body">
            </div>
            <hr>

            <h4>{{ text_checkout_shipping_method }}</h4>
            <div id="guest-shipping-method-body">
            </div>
            {% endif %}
            <hr>

            <h4>{{ text_checkout_payment_method }}</h4>
            <div id="guest-payment-method-body">
            </div>
            <hr>

            <div class="row">
                <button id="button-checkout-calculate">{{ text_checkout_submit }}</button>
            </div>
            <h4>{{ text_checkout_confirm }}</h4>
            <div id="confirm-body">
            </div>

        </div>
    </div>
    
</div>

<script type="text/javascript"><!--
const c = {
    guest_OnCountryChange: function(selector) {
        $(selector + ' select[name=\'country_id\']').on('change', function() {
            $.ajax({
                url: 'index.php?route=checkout/checkout/country&country_id=' + this.value + "&selector=" + ((selector === '#guest-shipping-address-body') ? '1' : '0'),
                dataType: 'json',
                beforeSend: function() {
                    $(selector + ' select[name=\'country_id\']').prop('disabled', true);
                },
                complete: function() {
                    $(selector + ' select[name=\'country_id\']').prop('disabled', false);
                },
                success: function(json) {

                    if (json['postcode_required'] == '1') {
                        $(selector + ' input[name=\'postcode\']').parent().parent().addClass('required');
                    } else {
                        $(selector + ' input[name=\'postcode\']').parent().parent().removeClass('required');
                    }


                    html = '<option value="">' + json['text_select'] + '</option>';

                    if (json['zone'] && json['zone'] != '') {
                        for (i = 0; i < json['zone'].length; i++) {
                            html += '<option value="' + json['zone'][i]['zone_id'] + '"';

                            if (json['zone'][i]['zone_id'] == json['zone_id']) {
                                html += ' selected="selected"';
                            }

                            html += '>' + json['zone'][i]['name'] + '</option>';
                        }
                    } else {
                        html += '<option value="0" selected="selected">' + json['text_none'] + '</option>';
                    }

                    $(selector + ' select[name=\'zone_id\']').html(html);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                }
            });
        });

        $(selector + ' select[name=\'country_id\']').trigger('change');
    },
    guest_OnTermsAgree: function() {
        $(document).delegate('#guest-payment-method-body input[type=\'checkbox\']', 'click', function() {
            if(this.name == "agree") {
                $.ajax({
                    url: 'index.php?route=checkout/easy_guest_payment_method/agree&agree=' + ((this.checked) ? '1' : '0'),
                    dataType: 'json',
                    success: function(json) {

                        //todo: json["error"] handling, in controller too

                        //console.log(json);
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                    }
                });
            }

        });
    },
    guest_IsShippingSame: function(){
        const paymentToShipping = document.querySelector('#guest-shipping-address-body input[type=\'checkbox\']');
        if(paymentToShipping && paymentToShipping.checked && paymentToShipping.name === 'shipping_address'){
            return true;
        }
        return false;
    },
    guest_OnPaymentToShipping: function() {
        $(document).delegate('#guest-shipping-address-body input[type=\'checkbox\']', 'click', function() {
            if(this.name == "shipping_address") {
                if(this.checked){
                    c.ajaxPaymentToShipping();
                    const hideCrap = document.querySelector('.form-horizontal.collapsible');
                    if(hideCrap){ hideCrap.style.display = 'none'; }
                }
                else{
                    (async function() {
                        await c.ajaxPaymentToShipping();
                        await c.ajaxHtml("guestShippingAddress");
                        await c.guest_OnCountryChange('#guest-shipping-address-body');
                        //c.guest_OnPaymentToShipping();
                    })();
                }
            }

        });
    },
    ajaxHtml: function(collapseKey){
        var selfKey = this[collapseKey];
        return $.ajax({
            url: selfKey.url,
            dataType: 'html',
            success: function(html) {
                //console.log("html: " + selfKey.url);
                $(selfKey.body).html(html);
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    },
    // prepareUrl: function(collapseKey){
    //     var urlstr = '';
    //     const elements = document.querySelectorAll(this[collapseKey].save);
    //     if(elements){
    //         for(elm of elements){
    //             urlstr += "&" + elm.name + "=" + elm.value;
    //         }
    //     }
    //     //return encodeURIComponent(urlstr);
    //     return urlstr;
    // },
    ajaxJson: function(collapseKey){
        var selfKey = this[collapseKey];

        return $.ajax({
            url: selfKey.url + '/save',
            type: 'post',
            data: $(selfKey.save),
            //data: this.prepareUrl(collapseKey),
            dataType: 'json',
            success: function(json) {

                //console.log("json: " + selfKey.url + "/save");
                //console.log(json);
                $(`${selfKey.body} .alert-dismissible, ${selfKey.body} .text-danger`).remove(); // remove all text-danger divs
                $(`${selfKey.body} .form-group`).removeClass('has-error'); // clear error class from form-groups, payment_address and shipping address only

                if (json['redirect']) {
                    location = json['redirect'];
                } else if (json['error']) {

                    if (json['error']['warning']) {
                        $(selfKey.body).prepend('<div class="alert alert-danger alert-dismissible">' + json['error']['warning'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }

                    if(collapseKey === 'guestPaymentAddress' || collapseKey === 'guestPaymentToShipping' || collapseKey === 'guestShippingAddress') {
                        for (let i in json['error']) {
                            let element = $(selfKey.prefix + i.replace('_', '-')); 
                            if ($(element).parent().hasClass('input-group')) {
                                $(element).parent().after('<div class="text-danger">' + json['error'][i] + '</div>');
                            } else {
                                $(element).after('<div class="text-danger">' + json['error'][i] + '</div>');
                            }
                        }
                        
                        $(`${selfKey.body} .text-danger`).parent().addClass('has-error'); // Highlight any found errors
                    }
                }
                
                //return json;
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    },
    ajaxPaymentToShipping: function(){
        var selfKey = this["guestShippingAddress"];
        return $.ajax({
            url: selfKey.url + "/save",
            type: 'post',
            data: $("#guest-shipping-address-body input[type=\'checkbox\']:checked, #guest-payment-address-body input[type=\'text\'], #guest-payment-address-body input[type=\'date\'], #guest-payment-address-body input[type=\'datetime-local\'], #guest-payment-address-body input[type=\'time\'], #guest-payment-address-body input[type=\'checkbox\']:checked, #guest-payment-address-body input[type=\'radio\']:checked, #guest-payment-address-body input[type=\'hidden\'], #guest-payment-address-body textarea, #guest-payment-address-body select"),
            dataType: 'json',
            success: function(json) {

                //console.log("json: " + selfKey.url + "/save (PaymentToShipping)");
                //console.log(json);
                $(`${selfKey.body} .alert-dismissible, ${selfKey.body} .text-danger`).remove(); // remove all text-danger divs
                $(`${selfKey.body} .form-group`).removeClass('has-error'); // clear error class from form-groups, payment_address and shipping address only

                if (json['redirect']) {
                    location = json['redirect'];
                } else if (json['error']) {

                    if (json['error']['warning']) {
                        $(selfKey.body).prepend('<div class="alert alert-danger alert-dismissible">' + json['error']['warning'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
                    }

                    for (let i in json['error']) {
                        let element = $(selfKey.prefix + i.replace('_', '-')); 
                        if ($(element).parent().hasClass('input-group')) {
                            $(element).parent().after('<div class="text-danger">' + json['error'][i] + '</div>');
                        } else {
                            $(element).after('<div class="text-danger">' + json['error'][i] + '</div>');
                        }
                    }
                    
                    $(`${selfKey.body} .text-danger`).parent().addClass('has-error'); // Highlight any found errors
                }
                // else {
                //     {% if shipping_required %}
                //     var shipping_address = $('#guest-payment-address-body input[name=\'shipping_address\']:checked').prop('value');

                //     if (shipping_address) {
                //         //update Shipping method and then guestShipping address
                //     } else {
                //         //update guestShipping address
                //     }
                //     {% endif %}
                // }
            },
            error: function(xhr, ajaxOptions, thrownError) {
                alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    },
    "guestPaymentAddress": {
        "url":"index.php?route=checkout/easy_guest_payment_address", 
        "body":"#guest-payment-address-body",
        "save":"#guest-payment-address-body input[type=\'text\'], #guest-payment-address-body input[type=\'date\'], #guest-payment-address-body input[type=\'datetime-local\'], #guest-payment-address-body input[type=\'time\'], #guest-payment-address-body input[type=\'checkbox\']:checked, #guest-payment-address-body input[type=\'radio\']:checked, #guest-payment-address-body input[type=\'hidden\'], #guest-payment-address-body textarea, #guest-payment-address-body select",
        "prefix":"#input-payment-"
    },
    "guestShippingAddress": {
        "url":"index.php?route=checkout/easy_guest_shipping_address", 
        "body":"#guest-shipping-address-body",
        "save":"#guest-shipping-address-body input[type=\'text\'], #guest-shipping-address-body input[type=\'date\'], #guest-shipping-address-body input[type=\'datetime-local\'], #guest-shipping-address-body input[type=\'time\'], #guest-shipping-address-body input[type=\'password\'], #guest-shipping-address-body input[type=\'checkbox\']:checked, #guest-shipping-address-body input[type=\'radio\']:checked, #guest-shipping-address-body textarea, #guest-shipping-address-body select",
        "prefix":"#input-shipping-"
    },
    "guestShippingMethod": 
    {
        "url":"index.php?route=checkout/easy_guest_shipping_method", 
        "body":"#guest-shipping-method-body",
        "save":"#guest-shipping-method-body input[type=\'radio\']:checked, #guest-shipping-method-body textarea",
        "prefix":""
    },
    "guestPaymentMethod": {
        "url":"index.php?route=checkout/easy_guest_payment_method", 
        "body":"#guest-payment-method-body",
        "save":"#guest-payment-method-body input[type=\'radio\']:checked, #guest-payment-method-body input[type=\'checkbox\']:checked, #guest-payment-method-body textarea",
        "prefix":""
    },
    "confirm": {
        "url":"index.php?route=checkout/easy_confirm", 
        "body":"#confirm-body",
    }
}

$(document).ready(function() {
    (async function() {
	    await c.ajaxHtml("guestPaymentAddress");
        c.guest_OnCountryChange('#guest-payment-address-body');
        c.guest_OnPaymentToShipping();

        {% if shipping_required %}
        await c.ajaxHtml("guestShippingAddress");
        c.guest_OnCountryChange('#guest-shipping-address-body');
        await c.ajaxHtml("guestShippingMethod");
        {% endif %}
        
        await c.ajaxHtml("guestPaymentMethod");
        c.guest_OnTermsAgree();
    })();
});



$(document).delegate('#button-checkout-calculate', 'click', function() {

    //todo:
        // beforeSend: function() {
        // 	$('#button-account').button('loading');
		// },
        // complete: function() {
		// 	$('#button-account').button('reset');
        // },

    (async function() {
        var isokPA = true;
        var isokSA = true;
        var isokSM = true;
        var isokPM = true;

        await c.ajaxJson("guestPaymentAddress")
        .done(function(json) { 
            if(Object.keys(json).length > 0){ isokPA = false; } 
        })
        .fail(function() { isokPA = false; });

        if(c.guest_IsShippingSame()){
            await c.ajaxPaymentToShipping()
            .done(function(json) { 
                if(Object.keys(json).length > 0){ isokSA = false; } 
            })
            .fail(function() { isokSA = false; });
        } 
        else{
            await c.ajaxJson("guestShippingAddress")
            .done(function(json) { 
                if(Object.keys(json).length > 0){ isokSA = false; } 
            })
            .fail(function() { isokSA = false; });
        }

        await c.ajaxJson("guestShippingMethod")
        .done(function(json) { 
            if(Object.keys(json).length > 0){ isokSM = false; } 
        })
        .fail(function() { isokSM = false; });

        await c.ajaxJson("guestPaymentMethod")
        .done(function(json) { 
            if(Object.keys(json).length > 0){ isokPM = false; } 
        })
        .fail(function() { isokPM = false; });
        
        console.log(isokPA, isokSA, isokSM, isokPM);
        if(isokPA && isokSA && isokSM && isokPM){
            c.ajaxHtml('confirm');
        }

    })();
});


//-->
</script> 
{{ footer }}